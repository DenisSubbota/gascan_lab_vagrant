---
- name: Configure Monitor VM
  hosts: all
  become: true
  vars:
    evn_alias: 'denis_lab'
    ssh_pub_key: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDXyGc0wmF3gKrN/8pgh86gFMLfPXHwAc10JlwOndo749jnLzwo8JAHTd1kgLs7nCTJsQijMAcPz8W6RQMS2iVeH4Q4RjQNhuvMBWzQOmPynME4ZoSFuH7c6xycjKePbC2X/xFkKAf+GzG6zeM31Jm+AQaHsoVPCQiSNMs7QlQjZpvjNKFplpW2PVuXAGNH4eE3MtTgVJTQSvAPB2qwZQijruBtD5u9+fyY1esM9yuqIWka+hYbzhZrwLR//uLlLNpOafv/JUNWLONXJhBQAKw3/1Q1OhYOMZDitqEQx9CpEuSeeUuJSLqGZy4YHg+AiJDaDxdqz1kwOLGLPQ8S3mDV3fOB+C+VhuPjCXkIxEV+bq2XlDuUdlfAOn7+mZPstYbTbd68Zmje/H3JdinKHbFVv/I65G9kIj1wO90vXY1zFbfwyDHzUha+4QihmefBITztNbl57PBfM+u2k/Ck5exld9O5tE6JfCqm0jjV5hJc5rLZGBusbw9uxWnTc4Rgys3/hpLdCf5vbJCbHuCzq6lDzwT3Ii+BUQydTnigIAg6p6UmZ4hBsj7fcsJSWA5nk6nd4MwUUySNnPMgP66EikSy2Eh+HQVmJqcE5E5TldpsYBbTszl5XCwwu+sqmxsognfTh8RYHr+hQabBxFAi2LXJYaQpp3E1vSCOvcGZWAGoSw== denissubbota@Deniss-MBP.netis'
    custmer_env: 'denis_test_delete'
    client_identifier: "vsdA6ZBtMGyI34ao2NkPrqp1fjqX8tT0MIr9xhOVLEQfCGWPx8MgLt2WwTopcqtu"
    api_key: "9QVqPmlekUJV6dHn04hnS0HwemxrnboC7mrKJc8DwPvFtYwodt9C02OVc5MTDhO8"
    gascan_version: 'v1.8.0'

  tasks:
    - name: Installing required packages for Ubuntu + mysql client
      apt:
       name: 
        - wget 
        - acl 
        - mysql-client-core-8.0
       state: present
       update_cache: yes
    - name: Resize the partition (Vagrant needed)
      ignore_errors: yes
      command: growpart /dev/sda 1
    - name: Resize the filesystem (ext4) (Vagrant needed)
      command: resize2fs /dev/sda1
    - name: Create percona user  (Vagrant needed)
      ansible.builtin.user:
        name: percona
        shell: /bin/bash
        state: present
    - name: Add percona to passwordless sudo (Vagrant needed)
      ansible.builtin.lineinfile:
        path: /etc/sudoers.d/percona
        line: "percona ALL=(ALL) NOPASSWD:ALL"
        create: true
        mode: "0777"
    - name: Ensure sudoers file has correct permissions  (Vagrant needed)
      ansible.builtin.file:
        path: /etc/sudoers.d/percona
        mode: "0440"
    - name: Enable `lingering` for the Percona user
      ansible.builtin.command:
        cmd: "loginctl enable-linger percona"
      args:
        warn: false
    - name: Update `authorized keys` with pub keys from monitor nodes
      lineinfile:
        dest: /home/percona/.ssh/authorized_keys
        line: "{{ ssh_pub_key }}"
        state: present
        create: yes
        owner: percona
        group: percona
        mode: '0644'
    - name: Create `bin` directory in home
      ansible.builtin.file:
        path: "/home/percona/bin"
        state: directory
        mode: '0750'
        owner: percona
        group: percona
    - name: Getting latest `gascan` binary For Ubuntu 22 Jammy
      command: curl --insecure --output /home/percona/bin/gascan https://cdba.percona.com/downloads/gascan/{{ gascan_version }}/linux/amd64/ubuntu-jammy/gascan-py3.10
    - name: Making the `gascan` binary executable +x
      file:
        path: "/home/percona/bin/gascan"
        mode: '0764'
        owner: percona
        group: percona
    - name: Update `.bashrc` for percona user with neat PS1 and required env variables
      ansible.builtin.blockinfile:
        path: "/home/percona/.bashrc"  # Change to your target file path
        marker: "# {mark} Custom setup for gascan"
        mode: '0764'
        owner: percona
        group: percona
        block: |
          # Set up a colorful prompt
          RESET="\[\033[0m\]"
          COLOR_USER="\[\033[0;36m\]"
          COLOR_HOST="\[\033[1;31m\]"
          COLOR_DIR="\[\033[0;33m\]"
          COLOR_CMD="\[\033[0;37;00m\]"
          COLOR_CLIENT="\[\033[1;32m\]"
          MONITOR_NAME=monitor-gascan
          SSH_MS_NAME={{ evn_alias }}

          # Useful aliases
          alias avv="ansible-vault view ~/.config/gascan/secrets.yaml"
          alias db_tree='PEX_SCRIPT=db_tree.py /home/percona/bin/gas-tools'

          export ANSIBLE_VAULT_PASSWORD_FILE='/home/percona/.config/gascan/.vault-key' \
          GASCAN_DEFAULT_INVENTORY=0 \
          GASCAN_INVENTORY_CONFIG_FILE='/home/percona/.config/gascan/inventory-config.json'
          export PS1="[${COLOR_CLIENT}${SSH_MS_NAME}${RESET}] ${COLOR_USER}\u${RESET}@${COLOR_HOST}${MONITOR_NAME}${RESET}: ${COLOR_DIR}\W ${RESET}\\$ ${COLOR_CMD}"
          export PATH=$PATH:/home/percona/bin

          # For customers with passwordless below flag helps to run gascan without `--passwordless-sudo`
          sudo -n true 2>/dev/null && export GASCAN_FLAG_PASSWORDLESS_SUDO=1
    - name: Extracting `gascan` binary
      become_user: percona
      command: ~/bin/gascan --monitor=denis_test_delete --extract-bundle --extract-path=${HOME}
    - name: Configuring api_key and client_identifier with custmer_env for SN inventory connectivity
      ansible.builtin.copy:
        dest: "/home/percona/.config/gascan/inventory-config.json"
        content: |
            {
              "headers": {
                "CDBAng-Auth-Id": "{{ client_identifier }}",
                "CDBAng-Auth-Token": "{{ api_key }}",
                "CDBAng-Monitor-Name": "{{ custmer_env }}",
                "Content-type": "application/json"
              },
              "key_file": "/home/percona/.config/gascan/.vault-key",
              "retry_attempts": 3,
              "retry_wait_seconds": 10,
              "uri": "https://cdba.percona.com/ng/inventory"
            }
        owner: percona
        group: percona
        mode: '0644'
    - name: Verifying that inventory from SN working fine
      become_user: percona
      command: /home/percona/bin/gascan -refresh -get-inventory
    - name: Running `gascan` initially with installation of PMM-server
      ansible.builtin.shell: |
        /home/percona/bin/gascan --passwordless-s
      become_user: percona
      environment:
        SHELL: /bin/bash
        PWD: /home/percona
        ANSIBLE_VAULT_PASSWORD_FILE: /home/percona/.config/gascan/.vault-key
        HOME: /home/percona
        GASCAN_INVENTORY_CONFIG_FILE: /home/percona/.config/gascan/inventory-config.json
        GASCAN_DEFAULT_INVENTORY: 0
        PATH: /home/percona/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/percona/bin

