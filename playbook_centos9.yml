---
- name: Configure Monitor VM
  hosts: all
  become: true
  tasks:
    - name: Install required tools
      package:
        name: 
        - cloud-utils-growpart
        - wget 
        - checkpolicy
        state: present
    - name: Resize the partition
      ignore_errors: yes
      command: growpart /dev/sda 1

    - name: Resize the filesystem (ext4)
      command: resize2fs /dev/sda1
    - name: Create percona user
      ansible.builtin.user:
        name: percona
        shell: /bin/bash
        state: present

    - name: Add percona to passwordless sudo
      ansible.builtin.lineinfile:
        path: /etc/sudoers.d/percona
        line: "percona ALL=(ALL) NOPASSWD:ALL"
        create: true
        mode: "0777"

    - name: Update authorized keys with pub keys from monitor nodes
      lineinfile:
        dest: /home/percona/.ssh/authorized_keys
        line: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIJENbJFFpjzd1PT+eoEdBcX1Gva6PQuOVvyYiZ5lMGze RDBA"
        state: present
        create: yes
        owner: percona
        group: percona
        mode: '0644'

    - name: Ensure sudoers file has correct permissions
      ansible.builtin.file:
        path: /etc/sudoers.d/percona
        mode: "0440"

    - name: Create bin directory in home
      become_user: percona
      ansible.builtin.file:
        path: "/home/percona/bin"
        state: directory
        mode: '0755'

    - name: Getting latest gascan binary for CentOS Stream 9/RHEL 9/Oracle Linux 9
      become_user: percona
      command: curl --insecure --output /home/percona/bin/gascan https://cdba.percona.com/downloads/gascan/v1.7.0/linux/amd64/centos-stream9/gascan-py3.9

    - name: Making the gascan binary executable +x
      file:
        path: "/home/percona/bin/gascan"
        mode: '0764'

    - name: Append custom environment setup to bashrc
      become_user: percona
      ansible.builtin.blockinfile:
        path: "/home/percona/.bashrc"  # Change to your target file path
        marker: "# {mark} Custom setup for gascan"
        block: |
          # Set up a colorful prompt
          RESET="\[\033[0m\]"
          COLOR_USER="\[\033[0;36m\]"
          COLOR_HOST="\[\033[1;31m\]"
          COLOR_DIR="\[\033[0;33m\]"
          COLOR_CMD="\[\033[0;37;00m\]"
          COLOR_CLIENT="\[\033[1;32m\]"
          MONITOR_NAME=monitor-gascan
          SSH_MS_NAME=denis_lab

          # Useful aliases
          alias avv="ansible-vault view ~/.config/gascan/secrets.yaml"
          alias db_tree='PEX_SCRIPT=db_tree.py /home/percona/bin/gas-tools'

          export ANSIBLE_VAULT_PASSWORD_FILE='/home/percona/.config/gascan/.vault-key' \
          GASCAN_DEFAULT_INVENTORY=0 \
          GASCAN_INVENTORY_CONFIG_FILE='/home/percona/.config/gascan/inventory-config.json'
          export PS1="[${COLOR_CLIENT}${SSH_MS_NAME}${RESET}] ${COLOR_USER}\u${RESET}@${COLOR_HOST}${MONITOR_NAME}${RESET}: ${COLOR_DIR}\W ${RESET}\\$ ${COLOR_CMD}"
          export PATH=$PATH:/home/percona/bin

          # For customers with passwordless below flag helps to run gascan without `--passwordless-sudo`
          sudo -n true 2>/dev/null && export GASCAN_FLAG_PASSWORDLESS_SUDO=1

    - name: Extracting gascan binary for CentOS Stream 9/RHEL 9/Oracle Linux 9
      become_user: percona
      command: ~/bin/gascan --monitor=denis_test_delete --extract-bundle --extract-path=${HOME}

    - name: Update inventory file for gascan
      ansible.builtin.copy:
        dest: "/home/percona/.config/gascan/inventory-config.json"
        content: |
            {
              "headers": {
                "CDBAng-Auth-Id": "vsdA6ZBtMGyI34ao2NkPrqp1fjqX8tT0MIr9xhOVLEQfCGWPx8MgLt2WwTopcqtu",
                "CDBAng-Auth-Token": "9QVqPmlekUJV6dHn04hnS0HwemxrnboC7mrKJc8DwPvFtYwodt9C02OVc5MTDhO8",
                "CDBAng-Monitor-Name": "denis_test_delete",
                "Content-type": "application/json"
              },
              "key_file": "/home/percona/.config/gascan/.vault-key",
              "retry_attempts": 3,
              "retry_wait_seconds": 10,
              "uri": "https://cdba.percona.com/ng/inventory"
            }
        owner: percona
        group: percona
        mode: '0644'

    - name: Testing inventory
      become_user: percona
      command: /home/percona/bin/gascan -refresh -get-inventory


    - name: Run command as percona user with .bashrc sourced
      ansible.builtin.shell: |
        source /home/percona/.bashrc
        /home/percona/bin/gascan --passwordless-sudo
      become_user: percona
      environment:
        PATH: "/home/percona/bin:/usr/local/bin:/usr/bin:/bin"
        HOME: "/home/percona"
      async: 0
      poll: 0

# - name: Manage Vault-encrypted secret file and add new variables
#   hosts: localhost
#   tasks:
#     - name: Decrypt the Vault-encrypted secret file
#       ansible.builtin.slurp:
#         src: /path/to/your/secret_file.yml
#       register: secret_content
#       no_log: true

#     - name: Decode the Vault-encrypted content
#       set_fact:
#         secret_data: "{{ secret_content.content | b64decode | from_yaml }}"

#     - name: Add new variables to denis_test_delete
#       set_fact:
#         secret_data: "{{ secret_data | combine({'all': {'children': {'hosts': {'denis_test_delete': secret_data.all.children.hosts.denis_test_delete | combine({'ansible_ssh_user': 'your_user', 'ansible_ssh_private_key_file': '/path/to/key'})}}}}}) }}"

#     - name: Re-encrypt and save the modified secret file
#       ansible.builtin.copy:
#         dest: /path/to/your/secret_file.yml
#         content: "{{ secret_data | to_yaml | indent(2) }}"
#         mode: '0600'
#         backup: yes
#       no_log: truea